<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns:sec="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:security="http://www.springframework.org/schema/security"
        xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/resources/**" filters="none"/>
            <sec:filter-chain pattern="/pages/login.xhtml*" filters="none"/>
            <sec:filter-chain pattern="/javax.faces.resource/**" filters="none"/>
            <sec:filter-chain pattern="/index.html" filters="none"/>
            <sec:filter-chain pattern="/accessDenied.jsp" filters="none"/>
            <sec:filter-chain pattern="/logout.jsp" filters="none"/>
            <sec:filter-chain pattern="/css/**" filters="none"/>

            <!--  <sec:filter-chain pattern="/**"
                              filters="
		            securityContextFilter,
		            logoutFilter,
		            authenticationProcessingFilter,
		            exceptionTranslationFilter,
		            filterSecurityInterceptor"/>
		     <-->
       	</security:filter-chain-map>
        	
    </beans:bean>


    <beans:bean id="securityContextFilter"
                class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <beans:property name="securityContextRepository" ref="securityContextRepository"/>
    </beans:bean>

    <beans:bean id="securityContextRepository"
                class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>

    <beans:bean id="authenticationProcessingFilter"
                class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <beans:property name="usernameParameter" value="j_username"/>
        <beans:property name="passwordParameter" value="j_password"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <beans:bean id="authenticationFailureHandler"
                class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/pages/login.xhtml"/>
    </beans:bean>

    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg value="/logged_out.htm"/>
        <beans:constructor-arg>
            <beans:list>
                <beans:bean
                        class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="exceptionTranslationFilter"
                class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
        <beans:property name="accessDeniedHandler" ref="accessDeniedHandler"/>
    </beans:bean>

    <beans:bean id="authenticationEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/pages/login.xhtml"/>
        <beans:property name="forceHttps" value="false"/>
    </beans:bean>

    <beans:bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <beans:property name="errorPage" value="/pages/Inicio.xhtml?id=1"/>
    </beans:bean>

    <beans:bean id="filterSecurityInterceptor"
                class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
        <beans:property name="securityMetadataSource" ref="myFilterInvocationSecurityMetadataSource"/>
    </beans:bean>

    <beans:bean id="accessDecisionManager"
                class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="myFilterInvocationSecurityMetadataSource"
                class="org.ruqu.ras.security.MyFilterSecurityMetadataSource" >
        <beans:property name="rolService" ref="RolService" />
     </beans:bean>

    <beans:bean id="fiMds"
                class="org.ruqu.ras.security.FilterInvocationSecurityMetadataSourcePostProcessor">
        <beans:property name="securityMetadataSource" ref="myFilterInvocationSecurityMetadataSource"/>


    </beans:bean>

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
    </beans:bean>



    <beans:bean id="authenticationManager"
                class="org.springframework.security.authentication.ProviderManager">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref local="daoAuthenticationProvider"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <sec:authentication-manager>
        <sec:authentication-provider user-service-ref="userDetailsService">

        </sec:authentication-provider>
    </sec:authentication-manager>

</beans:beans>