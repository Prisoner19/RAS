package org.ruqu.ras.domain;

// Generated 14-nov-2013 0:10:23 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Personalasignado generated by hbm2java
 */
@Entity
@Table(name = "PersonalAsignado", catalog = "ras")
public class Personalasignado implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private PersonalasignadoId id;
	private Personal personal;
	private Proyecto proyecto;
	private BigDecimal pago;
	private String tarea;
	private Date inicio;
	private Date fin;

	public Personalasignado() {
	}

	public Personalasignado(PersonalasignadoId id, Personal personal,
			Proyecto proyecto) {
		this.id = id;
		this.personal = personal;
		this.proyecto = proyecto;
	}

	public Personalasignado(PersonalasignadoId id, Personal personal,
			Proyecto proyecto, BigDecimal pago, String tarea, Date inicio,
			Date fin) {
		this.id = id;
		this.personal = personal;
		this.proyecto = proyecto;
		this.pago = pago;
		this.tarea = tarea;
		this.inicio = inicio;
		this.fin = fin;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "personalIdPersonal", column = @Column(name = "Personal_idPersonal", nullable = false)),
			@AttributeOverride(name = "proyectoIdProyecto", column = @Column(name = "Proyecto_idProyecto", nullable = false))})
	public PersonalasignadoId getId() {
		return this.id;
	}

	public void setId(PersonalasignadoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Personal_idPersonal", nullable = false, insertable = false, updatable = false)
	public Personal getPersonal() {
		return this.personal;
	}

	public void setPersonal(Personal personal) {
		this.personal = personal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Proyecto_idProyecto", nullable = false, insertable = false, updatable = false)
	public Proyecto getProyecto() {
		return this.proyecto;
	}

	public void setProyecto(Proyecto proyecto) {
		this.proyecto = proyecto;
	}

	@Column(name = "Pago", precision = 10)
	public BigDecimal getPago() {
		return this.pago;
	}

	public void setPago(BigDecimal pago) {
		this.pago = pago;
	}

	@Column(name = "Tarea", length = 145)
	public String getTarea() {
		return this.tarea;
	}

	public void setTarea(String tarea) {
		this.tarea = tarea;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Inicio", length = 10)
	public Date getInicio() {
		return this.inicio;
	}

	public void setInicio(Date inicio) {
		this.inicio = inicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Fin", length = 10)
	public Date getFin() {
		return this.fin;
	}

	public void setFin(Date fin) {
		this.fin = fin;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Personalasignado other = (Personalasignado) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
	
	

}
