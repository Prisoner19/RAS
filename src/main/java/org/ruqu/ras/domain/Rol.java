package org.ruqu.ras.domain;

// Generated 14-nov-2013 0:10:23 by Hibernate Tools 4.0.0

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Rol generated by hbm2java
 */
@Entity
@Table(name = "Rol", catalog = "ras")
public class Rol implements java.io.Serializable {

    public static final String HOME = "ROLE_HOME";
    public static final String NO_ROLS = "ROLE_SECRET";

    private Integer idRol;
    private String descripcion;
    private boolean vigencia=true;
    private Set<Usuario> usuarios = new HashSet<Usuario>(0);
    private Set<Opcion> opcions = new HashSet<Opcion>(0);

    public Rol() {
    }

    public Rol(Integer id, String descripcion) {
        this.idRol = id;
        this.descripcion = descripcion;
    }

    public Rol(boolean vigencia) {
        this.vigencia = vigencia;
    }

    public Rol(String descripcion, boolean vigencia, Set<Usuario> usuarios,
               Set<Opcion> opcions) {
        this.descripcion = descripcion;
        this.vigencia = vigencia;
        this.usuarios = usuarios;
        this.opcions = opcions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "idRol", unique = true, nullable = false)
    public Integer getIdRol() {
        return this.idRol;
    }

    public void setIdRol(Integer idRol) {
        this.idRol = idRol;
    }

    @Column(name = "Descripcion", length = 45)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "Vigencia", nullable = false)
    public boolean isVigencia() {
        return this.vigencia;
    }

    public void setVigencia(boolean vigencia) {
        this.vigencia = vigencia;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rol")
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }

    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "OpcionAsignadas", catalog = "ras", joinColumns = {@JoinColumn(name = "Rol_idRol", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "Opcion_idOpcion", nullable = false, updatable = false)})
    public Set<Opcion> getOpcions() {
        return this.opcions;
    }

    public void setOpcions(Set<Opcion> opcions) {
        this.opcions = opcions;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Rol rol = (Rol) o;

        if (!idRol.equals(rol.idRol)) return false;

        return true;
    }

    @Override
    public int hashCode() {
        return idRol.hashCode();
    }

    @Override
    public String toString(){
        return Integer.toString(idRol);
    }
}
